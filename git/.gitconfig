[credential]
	helper = store
[user]
	email = jhagg314@gmail.com
	name = Jen Hagg

[includeIf "gitdir:~/work/"]
    path = ~/work/.gitconfig
[includeIf "gitdir:~/alt/"]
    path = ~/alt/.gitconfig

[core]
	editor = vim

[alias]
	co = checkout
	br = branch -vv
	st = status
	p = push origin HEAD
	pf = push -f origin HEAD
	prev = reset --soft HEAD^
	forget = reset --hard HEAD
	nvm = reset --hard HEAD
    ri = rebase -i
	lsfiles = !"lsfiles() { git diff-tree --no-commit-id --name-only -r $1;  }; lsfiles"

	##### from https://github.com/jessfraz/dotfiles/blob/master/.gitconfig
	# View abbreviated SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph --abbrev-commit

	# View the current working tree status using the short format
	s = status -s

	# Commit all changes
	ca = !git add -A && git commit -av

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# Checkout a pull request from origin (of a github repository)
	pr = !"pr() { git fetch origin pull/$1/head:pr-$1; git checkout pr-$1; }; pr"

	# Switch to a branch, creating it if necessary
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

	# Color graph log view
	graph = log --graph --color --pretty=format:"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n"

	new = !"switch() { git branch -m old; git checkout -b $1 $2; git branch -D old; }; switch"

	##########

[fetch]
	prune = true

[pull]
	ff = only

[diff]
	# Detect copies as well as renames
	renames = copies

[rebase]
    autosquash = true
